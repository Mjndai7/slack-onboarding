version: '3'

services:
  db:
    restart: always
    image: postgres:latest
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  web:
    restart: always
    build:
      context: ./back
      dockerfile: Dockerfile.prod
    expose:
      - "8000"
    env_file:
     - ./prod.env
    links:
      - db:db
      - redis:redis
    volumes:
      - ./:/home/django/app
      - static:/home/django/app/static
    command: /home/django/.local/bin/gunicorn back.wsgi:application -b :8000
    depends_on:
      - db

  nginx:
    restart: always
    build: ./nginx/
    volumes:
      - ./back/static:/var/www/html
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/var:/var/lib/letsencrypt
      - ./certbot/dhparam:/etc/ssl/certs
      - static:/var/www/static:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    links:
      - web:web

  certbot:
    image: certbot/certbot
    env_file:
     - ./prod.env
    volumes:
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/var:/var/lib/letsencrypt
      - ./back/static:/var/www/html
    depends_on:
      - web
    command: certonly --webroot --webroot-path=/var/www/html --email test@gmail.com --agree-tos --no-eff-email --staging -d $BASE_URL

  redis:
    restart: always
    image: redis:latest
    ports:
      - "6379:6379"

  celery:
    build: ./back
    command: /usr/local/bin/celery -A back worker -l info
    depends_on:
      - redis

  celery-beat:
    build: ./back
    command: /usr/local/bin/celery -A back beat -l info
    depends_on:
      - redis

volumes:
  web-django1:
  static:
  pgdata:
